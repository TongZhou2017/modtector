name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ''
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            ext: '.exe'
          - target: x86_64-apple-darwin
            os: macos-latest
            ext: ''
          - target: aarch64-apple-darwin
            os: macos-latest
            ext: ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install system dependencies (Linux)
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y libhts-dev pkg-config

      - name: Install system dependencies (Windows)
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          # Install vcpkg for Windows dependencies
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          cd C:\vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg integrate install

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: modtector-${{ matrix.target }}${{ matrix.ext }}
          path: target/${{ matrix.target }}/release/modtector${{ matrix.ext }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Rename artifacts for better organization
        run: |
          mkdir -p release
          for dir in dist/*/; do
            if [ -d "$dir" ]; then
              target_name=$(basename "$dir")
              if [ -f "$dir/modtector" ]; then
                cp "$dir/modtector" "release/modtector-$target_name"
              elif [ -f "$dir/modtector.exe" ]; then
                cp "$dir/modtector.exe" "release/modtector-$target_name.exe"
              fi
            fi
          done

      - name: Create checksums
        run: |
          cd release
          for file in modtector-*; do
            if [ -f "$file" ]; then
              sha256sum "$file" > "$file.sha256"
            fi
          done

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
